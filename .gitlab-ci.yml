default:
  image: node:20.10.0
  before_script:
    - corepack enable pnpm
    - pnpm config set store-dir .pnpm-store
    - pnpm i
  cache:
    key:
      files:
        - pnpm-lock.yaml
    paths:
      - .pnpm-store

workflow:
  rules:
    - if: '$CI_COMMIT_TITLE !~ /chore\(packages\): publish packages/ && $CI_COMMIT_MESSAGE !~ /\[skip ci\]/'

stages:
  - build
  - test
  - publish

build-job:
  stage: build
  script:
    - pnpm build
    - pnpm typecheck

test-next-dev:
  stage: test
  script:
    - pnpm build
    - NEXT_TEST_MODE=dev pnpm test --filter=./__tests__/next -- --ci --runInBand
test-next-build:
  stage: test
  script:
    - pnpm build
    - NEXT_TEST_MODE=start pnpm test --filter=./__tests__/next -- --ci --runInBand
test-build:
  stage: test
  script:
    - pnpm build
    - pnpm test --filter=./__tests__/build -- --ci --runInBand

publish-job:
  stage: publish
  id_tokens:
    SIGSTORE_ID_TOKEN:
      aud: sigstore
  script:
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git config --global user.name "$GITLAB_USER_NAME"
    - git remote set-url origin "https://gitlab-ci-token:$CI_JOB_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git"
    - echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
    - git checkout $CI_COMMIT_BRANCH
    - pnpm build
    - pnpm typecheck
    - pnpm changeset version
    - pnpm changeset publish
    - 'git commit -ma "chore(packages): publish packages"'
    - git push origin HEAD:$CI_COMMIT_REF_NAME --follow-tags
  rules:
    - if: '($CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "9.0.0") && $CI_PIPELINE_SOURCE != "merge_request_event" && $CI_COMMIT_MESSAGE =~ /\[bump\]/'
